<div class="form-container">
  <%= form_with(model: book) do |form| %>
    <% if book.errors.any? %>
      <div class="error-messages">
        <h3><%= pluralize(book.errors.count, "error") %> prohibited this book from being saved:</h3>
        <ul>
          <% book.errors.each do |error| %>
            <li><%= error.full_message %></li>
          <% end %>
        </ul>
      </div>
    <% end %>
    <div class="form-group">
      <%= form.label :cover_image, class: "form-label" %>
      <div class="file-upload-container">
        <div class="file-upload-preview" id="imagePreview">
          <% if book.cover_image.attached? %>
            <%= image_tag book.cover_image, alt: "Book cover", class: "preview-image" %>
          <% else %>
            <div class="preview-placeholder">
              <div class="preview-icon">üìö</div>
              <p>No image selected</p>
            </div>
          <% end %>
        </div>
        <div class="file-upload-button">
          <%= form.file_field :cover_image, accept: "image/*", class: "file-input", id: "coverImageInput" %>
          <label for="coverImageInput" class="file-label">
            <span class="file-icon">üìÅ</span>
            <span class="file-text">Choose Cover Image</span>
          </label>
        </div>
      </div>
    </div>
    <div class="form-group">
      <%= form.label :title, class: "form-label" %>
      <%= form.text_field :title, class: "form-input", placeholder: "Enter book title..." %>
    </div>
    <div class="form-group">
      <%= form.label :author, class: "form-label" %>
      <%= form.text_field :author, class: "form-input", placeholder: "Enter author name..." %>
    </div>
    <div class="form-actions">
      <%= form.submit class: "btn btn-primary" %>
    </div>
  <% end %>
</div>
<script>
  document.addEventListener('DOMContentLoaded', function() {
    const fileInput = document.getElementById('coverImageInput');
    const preview = document.getElementById('imagePreview');

    fileInput.addEventListener('change', function(e) {
      const file = e.target.files[0];
      if (file) {
        const reader = new FileReader();
        reader.onload = function(e) {
          preview.innerHTML = `<img src="${e.target.result}" alt="Preview" class="preview-image">`;
        };
        reader.readAsDataURL(file);
      }
    });
  });
</script>
<style>
  .form-container {
    max-width: 500px;
    margin: 0 auto;
    background: white;
    padding: 2rem;
    border-radius: 12px;
    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
  }

  .form-group {
    margin-bottom: 1.5rem;
  }

  .form-label {
    display: block;
    font-weight: 500;
    color: #374151;
    margin-bottom: 0.5rem;
  }

  .file-upload-container {
    display: flex;
    gap: 1rem;
    align-items: flex-start;
  }

  .file-upload-preview {
    flex: 1;
    min-height: 120px;
    border: 2px dashed #d1d5db;
    border-radius: 8px;
    display: flex;
    align-items: center;
    justify-content: center;
    background: #f9fafb;
    overflow: hidden;
  }

  .preview-image {
    max-width: 100%;
    max-height: 120px;
    object-fit: cover;
    border-radius: 6px;
  }

  .preview-placeholder {
    text-align: center;
    color: #6b7280;
  }

  .preview-icon {
    font-size: 2rem;
    margin-bottom: 0.5rem;
  }

  .preview-placeholder p {
    margin: 0;
    font-size: 0.875rem;
  }

  .file-upload-button {
    flex-shrink: 0;
  }

  .file-input {
    display: none;
  }

  .file-label {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.75rem 1rem;
    background: #3b82f6;
    color: white;
    border-radius: 6px;
    cursor: pointer;
    transition: all 0.2s;
    font-size: 0.875rem;
    font-weight: 500;
  }

  .file-label:hover {
    background: #2563eb;
    transform: translateY(-1px);
  }

  .file-icon {
    font-size: 1rem;
  }

  .form-input {
    width: 100%;
    padding: 0.75rem;
    border: 1px solid #d1d5db;
    border-radius: 6px;
    font-size: 1rem;
    transition: border-color 0.2s;
  }

  .form-input:focus {
    outline: none;
    border-color: #3b82f6;
    box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
  }

  .form-actions {
    text-align: center;
  }

  .btn {
    padding: 0.75rem 1.5rem;
    border-radius: 6px;
    text-decoration: none;
    font-size: 1rem;
    font-weight: 500;
    border: none;
    cursor: pointer;
    transition: all 0.2s;
    display: inline-block;
  }

  .btn-primary {
    background: #3b82f6;
    color: white;
  }

  .btn-primary:hover {
    background: #2563eb;
  }

  .error-messages {
    background: #fef2f2;
    border: 1px solid #fecaca;
    border-radius: 6px;
    padding: 1rem;
    margin-bottom: 1.5rem;
  }

  .error-messages h3 {
    color: #dc2626;
    margin: 0 0 0.5rem 0;
    font-size: 1rem;
  }

  .error-messages ul {
    margin: 0;
    padding-left: 1.5rem;
  }

  .error-messages li {
    color: #dc2626;
  }

  @media (max-width: 640px) {
    .file-upload-container {
      flex-direction: column;
    }

    .file-upload-preview {
      min-height: 100px;
    }
  }
</style>